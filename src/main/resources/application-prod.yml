# 线上配置文件
# @author stephen qiu
#
spring:
  application:
    name: learning-backend
  config:
    activate:
      on-profile: prod
  # 支持 swagger3
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  # 数据库配置
  # todo 需替换配置
  datasource:
    driver-class-name: ${prod.mysql.datasource.driver-class-name}
    url: ${prod.mysql.datasource.url}
    username: ${prod.mysql.datasource.username}
    password: ${prod.mysql.datasource.password}
  # Redis 配置
  # todo 需替换配置
  redis:
    database: ${prod.redis.database}
    host: ${prod.redis.host}
    port: ${prod.redis.port}
    timeout: ${prod.redis.timeout}
    password: ${prod.redis.password}
  # Elasticsearch 配置
  # todo 需替换配置，然后取消注释
  elasticsearch:
    uris: ${prod.elasticsearch.uris}
  # 文件上传
  servlet:
    multipart:
      # 大小限制
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB


server:
  port: 8101
  servlet:
    context-path: /api
    session:
      cookie:
        max-age: 2592000
        domain: 152.136.235.18
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: false
    # 生产环境关闭日志
    log-impl: ''
  global-config:
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除的实体字段名
      logic-delete-value: 1 # 逻辑已删除值（默认为 1）
      logic-not-delete-value: 0 # 逻辑未删除值（默认为 0）
# 对象存储
cos:
  client:
    enable: true
    accessKey: ${prod.cos.client.accessKey}
    secretKey: ${prod.cos.client.secretKey}
    region: ${prod.cos.client.region}
    bucket: ${prod.cos.client.bucket}

# Redisson 配置
redisson:
  enabled: true
  database: ${prod.redisson.database}
  host: ${prod.redisson.host}
  port: ${prod.redisson.port}
  password: ${prod.redisson.password}
# 对象存储配置
oss:
  # MinIO OSS配置
  minio:
    # todo 是否开启
    enable: false
    # 域名（格式：【ip:port】）
    endpoint: 127.0.0.1:9000
    # 是否开启TLS
    enable-tls: false
    # 用户的 SecretId
    secret-id: xxxxxxxx
    # 用户的 SecretKey
    secret-key: xxxxxxxx
    # 桶名称
    bucket-name: xxxxxxxx


############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # todo 是否启用SaToken认证鉴权功能（此处为false并不是禁用SaToken，而是让SaToken相关注解失效，预先开启）
  enable-sa: true
  # todo 是否使用JWT格式的Token（建议如果没有开启redis配置就不要开启JWT格式的Token，预先关闭）
  enable-jwt: true
  # token 名称（同时也是 cookie 名称）
  token-name: Authorization
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: false
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: true
  # token前缀  注意必须是 Bearer {token}, Bearer后面加空格
  token-prefix: Bearer
  # jwt秘钥
  jwt-secret-key: ${prod.sa-token.jwt-secret-key}